#Check diagnosis is correctly labelled: 
disease__ontology_label <- gsub("normal", "Non-IBD",kong$disease__ontology_label)
kong$disease__ontology_label <- gsub("Crohn's disease", "CD",kong$disease__ontology_label)

#Make Gene lists: 
#Mucins:
muc <- c("MUC1", "MUC2", "MUC4","MUC13", "MUC17")

#Claudins: 
cldn <- c("CLDN2","CLDN3","CLDN4","CLDN5","CLDN7","CLDN8", "CLDN15", "CLDN23")

#CBC/LBR5+ Stem cells: 
isc <- c("LGR5", "OLFM4", "ASCL2", "EPHB2")

#Revival Stem cells: 
rsc <- c("ASCL2", ANXA1", "ANXA2", "BMI1", "CLU")

#Secretory-fated cells:
sec <- c("ATOH1", "FOXA1", "FOXA2","KLF4", "SOX9", "SPDEF")

#Absorptive-fated cells: 
abs <- c("ELF3", "HES1")

#Goblet cells:
goblet <- c("AGR2" "SPINK4", "TFF3", "BEST4")

#Receptors
receptor <- c("FFAR4", "TLR4", "TLR5", "TNFRSF1A", "TNFRSF1B", "IL1B", "IFNYR") 

#Tight Junctions: 
TJ <- c("F11R", "JAM3", "TJP1", "TJP2", "TJP3", "OCLN")

#Adherens Junctions: 
AJ <- c("CDH1", "CTNNA1", "CTNNB1", "CTNND1")

#Desmosome: 
desmo <- c("DSC2", "DSG2", "DSG3")


#Plot genes by disease status: 
dp_goblet_kong <- DotPlot(kong, features = goblet, group.by = "disease__ontology_label", scale.by = "size") +
  theme(axis.text.x = element_text(angle = 45,face = "italic",vjust = 1, hjust=1),
        legend.key.size = unit(4, 'mm'))+
  guides(size = guide_legend(title = "%\nExpressed"))+
  guides(color = guide_colorbar(title = "Expression"))+
  scale_colour_gradient(low = "#ADD8E6", high = "#7F00FF")+
  labs(y = "Disease Status)+
  coord_flip(xlim = NULL, ylim = NULL, expand = TRUE)
dp_goblet_kong

dp_sec_kong <- DotPlot(kong, features = sec, group.by = "disease__ontology_label", scale.by = "size")+
  theme(axis.text.x = element_text(angle = 45,face = "italic",vjust = 1, hjust=1),
        legend.key.size = unit(4, 'mm'))+
guides(size = guide_legend(title = "%\nExpressed"))+
guides(color = guide_colorbar(title = "Expression"))+
scale_colour_gradient(low = "#ADD8E6", high = "#7F00FF")+
labs(y = "Disease State")+
coord_flip(xlim = NULL, ylim = NULL, expand = TRUE)
dp_sec_kong

dp_abs_kong <- DotPlot(kong, features = abs, group.by = "disease__ontology_label", scale.by = "size") +
  theme(axis.text.x = element_text(angle = 45,face = "italic",vjust = 1, hjust=1),
        legend.key.size = unit(4, 'mm'))+
guides(size = guide_legend(title = "%\nExpressed"))+
guides(color = guide_colorbar(title = "Expression"))+
scale_colour_gradient(low = "#ADD8E6", high = "#7F00FF")+
labs(y = "Disease State")+
coord_flip(xlim = NULL, ylim = NULL, expand = TRUE)
dp_abs_kong

dp_paneth_kong <- DotPlot(kong, features = paneth, group.by = "disease__ontology_label", scale.by = "size")+
theme(axis.text.x = element_text(angle = 45,face = "italic",vjust = 1, hjust=1),
        legend.key.size = unit(4, 'mm'))+
guides(size = guide_legend(title = "%\nExpressed"))+
guides(color = guide_colorbar(title = "Expression"))+
scale_colour_gradient(low = "#ADD8E6", high = "#7F00FF")+
labs(y = "Disease State")+
coord_flip(xlim = NULL, ylim = NULL, expand = TRUE)
dp_paneth_kong

dp_isc_kong <- DotPlot(kong, features = isc, group.by = "disease__ontology_label", scale.by = "size")+
theme(axis.text.x = element_text(angle = 45,face = "italic",vjust = 1, hjust=1),
        legend.key.size = unit(4, 'mm'))+
guides(size = guide_legend(title = "%\nExpressed"))+
guides(color = guide_colorbar(title = "Expression"))+
scale_colour_gradient(low = "#ADD8E6", high = "#7F00FF")+
labs(y = "Disease State")+
coord_flip(xlim = NULL, ylim = NULL, expand = TRUE)
dp_isc_kong

dp_rsc_kong <- DotPlot(kong, features = rsc, group.by = "disease__ontology_label", scale.by = "size")+
theme(axis.text.x = element_text(angle = 45,face = "italic",vjust = 1, hjust=1),
        legend.key.size = unit(4, 'mm'))+
guides(size = guide_legend(title = "%\nExpressed"))+
guides(color = guide_colorbar(title = "Expression"))+
scale_colour_gradient(low = "#ADD8E6", high = "#7F00FF")+
labs(y = "Disease State")+
coord_flip(xlim = NULL, ylim = NULL, expand = TRUE)
dp_rsc_kong

dp_cells_bycond_kong <- DotPlot(kong, features = c(goblet, paneth, muc, sec, abs, isc, rsc), group.by = "disease__ontology_label", scale.by = "size")+
  theme(axis.text.x = element_text(angle = 45,face = "italic",vjust = 1, hjust=1),
        legend.key.size = unit(4, 'mm'))+
  guides(size = guide_legend(title = "%\nExpressed"))+
  guides(color = guide_colorbar(title = "Expression"))+
  scale_colour_gradient(low = "#ADD8E6", high = "#7F00FF")+
  labs(y = "Disease State")+
coord_flip(xlim = NULL, ylim = NULL, expand = TRUE)
dp_cells_bycond 

dp_junc_bycond_kong <- DotPlot(kong, features = c(cldn, desmosome, AJ, TJ), group.by = "disease__ontology_label", scale.by = "size")+
  theme(axis.text.x = element_text(angle = 45,face = "italic",vjust = 1, hjust=1),
        legend.key.size = unit(4, 'mm'))+
  guides(size = guide_legend(title = "%\nExpressed"))+
  guides(color = guide_colorbar(title = "Expression"))+
  scale_colour_gradient(low = "#ADD8E6", high = "#7F00FF")+
  labs(y = "Disease Status)+
  coord_flip(xlim = NULL, ylim = NULL, expand = TRUE)
dp_junc_bycond_kong

#Expression in epithelial cells only: 
epithelial_kong <- subset(kong, Celltype %in% c"LGR5+ crypt-base stem cells", "Tuft cells", "Paneth cells", "Enteroendocrine cells", "Transit-amplifying cells", "Enterocytes", "Goblet cells")

dp_cells_bycond_kong <- DotPlot(epithelial_kong, features = c(goblet, paneth, muc, sec, abs, isc, rsc), group.by = "disease__ontology_label", scale.by = "size")+
  theme(axis.text.x = element_text(angle = 45,face = "italic",vjust = 1, hjust=1),
        legend.key.size = unit(4, 'mm'))+
  guides(size = guide_legend(title = "%\nExpressed"))+
  guides(color = guide_colorbar(title = "Expression"))+
  scale_colour_gradient(low = "#ADD8E6", high = "#7F00FF")+
  labs(y = "Disease State")+
coord_flip(xlim = NULL, ylim = NULL, expand = TRUE)
dp_cells_bycond_kong

dp_junc_bycond_kong <- DotPlot(epithelial_kong, features = c(cldn, desmosome, AJ, TJ), group.by = "disease__ontology_label", scale.by = "size")+
  theme(axis.text.x = element_text(angle = 45,face = "italic",vjust = 1, hjust=1),
        legend.key.size = unit(4, 'mm'))+
  guides(size = guide_legend(title = "%\nExpressed"))+
  guides(color = guide_colorbar(title = "Expression"))+
  scale_colour_gradient(low = "#ADD8E6", high = "#7F00FF")+
  labs(y = "Disease Status)+
  coord_flip(xlim = NULL, ylim = NULL, expand = TRUE)
dp_junc_bycond_kong




